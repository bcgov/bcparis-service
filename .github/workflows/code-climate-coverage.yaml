name: Generate/Upload all Coverage Reports

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    
jobs:
  spring-boot:
    name: Create, format and upload Java coverage artifact
    runs-on: ubuntu-latest
    
    steps:  
      # Get Code Climate binary
      - name: Download Code Climate Binary
        run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      
      # Permissions applied to the Code Climate Executable
      - name: Apply executable perms to Code Climate Binary
        run: chmod +x ./cc-test-reporter
        
      # Before build
      - name: Before build
        run: ./cc-test-reporter before-build

      # Set required Git env vars for either pull request
      - name: Set ENV for codeclimate (pull_request)
        run: |
          echo "::set-env name=GIT_BRANCH::${{ github.event.pull_request.head.ref }}"
          echo "::set-env name=GIT_COMMIT_SHA::${{ github.event.pull_request.head.sha }}"
        if: github.event_name == 'pull_request'

      # Set required Git env vars for a push to master
      - name: Set ENV for codeclimate (push)
        run: |
          echo "::set-env name=GIT_BRANCH::$GITHUB_REF"
          echo "::set-env name=GIT_COMMIT_SHA::$GITHUB_SHA"
        if: github.event_name == 'push'

      # Trimming the ref to master in order to publish correct report (paambaati)
      - name: Set ref/head/master to master
        run: |
          echo "::set-env name=GIT_BRANCH::master"
        if: env.GIT_BRANCH == 'refs/heads/master'

      # Setup Java Environment
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      # Run Maven Verify to generate all jacoco reports
      - name: Build with Maven
        run: mvn -B verify -P all --file pom.xml
      
      
