name: Generate/Upload all Coverage Reports

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]
    
jobs:
  spring-boot:
    env:
      CC_TEST_REPORTER_ID: 38376aee43a1d7a4c716afb6773f415dc7484a9045cc07d4c2daba9ec36609d6
    
    name: Create, format and upload Java coverage artifact
    runs-on: ubuntu-latest
    
    steps:
      
      # Checkout Project
      - name: Checkout File Submission Repository
        uses: actions/checkout@v2
      
      # Get Code Climate binary
      - name: Download Code Climate Binary
        run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      
      # Permissions applied to the Code Climate Executable
      - name: Apply executable perms to Code Climate Binary
        run: chmod +x ./cc-test-reporter
        
      # Before build
      - name: Before build
        run: ./cc-test-reporter before-build

      # Set required Git env vars for either pull request
      - name: Set ENV for codeclimate (pull_request)
        run: |
          echo "GIT_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          #echo "::set-env name=GIT_BRANCH::${{ github.event.pull_request.head.ref }}"
          #echo "::set-env name=GIT_COMMIT_SHA::${{ github.event.pull_request.head.sha }}"
        if: github.event_name == 'pull_request'

      # Set required Git env vars for a push to master
      - name: Set ENV for codeclimate (push)
        run: |
          echo "GIT_BRANCH=$GITHUB_REF" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
          #echo "::set-env name=GIT_BRANCH::$GITHUB_REF"
          #echo "::set-env name=GIT_COMMIT_SHA::$GITHUB_SHA"
        if: github.event_name == 'push'

      # Trimming the ref to master in order to publish correct report (paambaati)
      - name: Set ref/head/master to master
        run: |
          echo "GIT_BRANCH=master" >> $GITHUB_ENV
          #echo "::set-env name=GIT_BRANCH::master"
        if: env.GIT_BRANCH == 'refs/heads/master'

      # Setup Java Environment
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
        
      # Where am I?
      - name: Where am I before Maven?
        run: |
          pwd
          echo "WHERE AM I?"
          ls
        
      # Run Maven Verify to generate all jacoco reports
      - name: Build with Maven
        run: mvn -B verify -P all --file pom.xml
      
      # Formatting the BACKEND coverage reports generated (dynamically)
      - name: Format BACKEND coverage reports
        run: |
          JACOCO_SOURCE_PATH=${{ github.workspace }}/src/main/java ./cc-test-reporter format-coverage ${{github.workspace}}/target/site/jacoco/jacoco.xml --input-type jacoco --output coverage/bcparis-codeclimate.json;

      # Upload total coverage report to Code Climate
      - name: Upload coverage report to Code Climate
        run: ./cc-test-reporter upload-coverage -i coverage/bcparis-codeclimate.json
