# This is the main workflow that creates a new image and pushes to Openshift image stream which in turn triggers the deployment

name: Main - Build Image and Push to Openshift Registry for Dev Deployment

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'App Name (bc-paris-api)'    
        required: true
        default: bc-paris-api
      env:
        description: 'Image Target Env'     
        required: true
        default: 'dev'

jobs:
  build-push-image:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.env }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Get Release Version
        run: |
          branch=${GITHUB_REF##*/}
          version=$(echo $branch | cut -d "/" -f2-)
          echo "releaseVersion=$version" >> $GITHUB_ENV

      - name: Get git commit short sha
        id: sha
        run: |
          shortSha=$(echo $(git rev-parse --short HEAD) | cut -c1-7)
          echo "gitsha=$shortSha" >> $GITHUB_ENV

      - name: Print Release Variables
        run: |
          echo "Release Application: ${{ github.event.inputs.app }}"
          echo "Release Environment: ${{ github.event.inputs.env }}"
          echo "Release Version: ${{ env.releaseVersion }}"
          echo "Release Git Sha: ${{ env.gitsha }}"

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Maven Package
        run: mvn -ntp -DskipTests -Popenshift clean package

      - name: Login to OpenShift Container Repository
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY_SILVER }}
          username: ${{ secrets.OPENSHIFT_SA_NAME }}
          password: ${{ secrets.OPENSHIFT_SA_PASSWORD }}

      - name: Build & Push Image to Openshift Image Stream
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          CONTEXT: .
          IMAGE: ${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY_SILVER }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE_SILVER }}/bc-paris-api:${{ secrets.OPENSHIFT_ENV_TAG }}
        run: |
          docker build --tag ${IMAGE} ${CONTEXT}
          docker push ${IMAGE}

      - name: Install OpenShift CLI
        run: |
          curl -L https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz | tar -xz
          sudo mv oc /usr/local/bin/

      - name: Authenticate OC Env Specific SA
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_NAMESPACE: ${{ secrets.OPENSHIFT_LICENSE_PLATE_SILVER }}-${{ github.event.inputs.env }}
          OPENSHIFT_USER: ${{ secrets.OPENSHIFT_SA_Env_DEPLOYER_NAME }}
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL_SILVER }}
          openshift_token: ${{ secrets.OPENSHIFT_SA_ENV_DEPLOYER_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_LICENSE_PLATE_SILVER }}-${{ github.event.inputs.env }}

      - name: Labelling DC to release version
        env:
          releaseVersion: ${{ env.releaseVersion }}
          gitsha: ${{ env.gitsha }}
          appName: ${{ github.event.inputs.app }}
          openshiftEnvNamespace: ${{ secrets.OPENSHIFT_LICENSE_PLATE_SILVER }}-${{ github.event.inputs.env }}
        run: |
          oc patch deployment ${appName} -n ${openshiftEnvNamespace} --type merge --patch "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"version\":\"${releaseVersion}.${gitsha}\"}}}}}"
